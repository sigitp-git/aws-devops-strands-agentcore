{
  "total_functions": 9,
  "total_tests": 17,
  "total_successes": 17,
  "success_rate": 100.0,
  "function_results": [
    {
      "function_name": "mcp-core-server",
      "test_cases": [
        {
          "test_number": 1,
          "description": "Test prompt understanding",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"prompt_understanding\", \"understanding\": {\"analysis\": {\"intent\": \"aws_expert_consultation\", \"domain\": \"cloud_infrastructure\", \"complexity\": \"intermediate\", \"requires_context\": true}, \"recommendations\": {\"approach\": \"systematic_analysis\", \"best_practices\": [\"Follow AWS Well-Architected Framework principles\", \"Consider security, reliability, performance, cost optimization\", \"Use Infrastructure as Code when possible\", \"Implement proper monitoring and logging\"], \"tools_to_use\": [\"AWS CloudFormation or CDK for infrastructure\", \"CloudWatch for monitoring\", \"AWS Config for compliance\", \"AWS Cost Explorer for cost analysis\"]}, \"context\": {\"aws_services\": \"comprehensive_knowledge\", \"devops_practices\": \"industry_standard\", \"security_focus\": \"zero_trust_model\", \"cost_awareness\": \"optimization_first\"}}, \"region\": \"us-east-1\"}"
          }
        },
        {
          "test_number": 2,
          "description": "Test AWS context",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"get_aws_context\", \"context\": {\"account_id\": \"291615555612\", \"user_arn\": \"arn:aws:sts::291615555612:assumed-role/MCPLambdaExecutionRole/mcp-core-server\", \"user_id\": \"AROAUHZNEIAOEUHDPY7G2:mcp-core-server\", \"current_region\": \"us-east-1\", \"available_regions\": [\"ap-south-1\", \"eu-north-1\", \"eu-west-3\", \"eu-west-2\", \"eu-west-1\", \"ap-northeast-3\", \"ap-northeast-2\", \"ap-northeast-1\", \"ca-central-1\", \"sa-east-1\"], \"timestamp\": \"2025-08-23T18:14:42.806341\", \"session_info\": {\"authenticated\": true, \"permissions\": \"lambda_execution_role\", \"access_level\": \"programmatic\"}}}"
          }
        },
        {
          "test_number": 3,
          "description": "Test system status",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"get_system_status\", \"status\": {\"overall_health\": \"degraded\", \"services\": {\"sts\": \"healthy\", \"ssm\": \"unhealthy\", \"ec2\": \"healthy\"}, \"health_score\": \"2/3\", \"region\": \"us-east-1\", \"timestamp\": \"2025-08-23T18:14:43.087332\", \"lambda_info\": {\"function_name\": \"core-mcp-server\", \"runtime\": \"python3.11\", \"memory_limit\": \"512MB\", \"timeout\": \"300s\"}}}"
          }
        }
      ],
      "success_count": 3,
      "total_tests": 3
    },
    {
      "function_name": "mcp-aws-documentation-server",
      "test_cases": [
        {
          "test_number": 1,
          "description": "Search AWS documentation",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"search_documentation\", \"results\": [], \"query\": \"S3 bucket\"}"
          }
        },
        {
          "test_number": 2,
          "description": "Read documentation (mock)",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"read_documentation\", \"content\": \"Error reading documentation: 404 Client Error: Not Found for url: https://docs.aws.amazon.com/s3/latest/userguide/creating-bucket.html\", \"url\": \"https://docs.aws.amazon.com/s3/latest/userguide/creating-bucket.html\"}"
          }
        }
      ],
      "success_count": 2,
      "total_tests": 2
    },
    {
      "function_name": "mcp-aws-pricing-server",
      "test_cases": [
        {
          "test_number": 1,
          "description": "Get pricing service codes",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"get_pricing_service_codes\", \"service_codes\": [\"A4B\", \"ACM\", \"AWSAmplify\", \"AWSAppFabric\", \"AWSAppRunner\", \"AWSAppStudio\", \"AWSAppSync\", \"AWSApplicationMigrationSvc\", \"AWSB2Bi\", \"AWSBCMPricingCalculator\", \"AWSBackup\", \"AWSBillingConductor\", \"AWSBudgets\", \"AWSCertificateManager\", \"AWSCleanRooms\", \"AWSCloudFormation\", \"AWSCloudMap\", \"AWSCloudTrail\", \"AWSCloudWAN\", \"AWSCodeArtifact\", \"AWSCodeCommit\", \"AWSCodeDeploy\", \"AWSCodePipeline\", \"AWSComputeOptimizer\", \"AWSConfig\", \"AWSCostExplorer\", \"AWSDataExchange\", \"AWSDataSync\", \"AWSDataTransfer\", \"AWSDatabaseMigrationSvc\", \"AWSDeepRacer\", \"AWSDeveloperSupport\", \"AWSDeviceFarm\", \"AWSDirectConnect\", \"AWSDirectoryService\", \"AWSELB\", \"AWSElasticDisasterRecovery\", \"AWSElementalMediaConvert\", \"AWSElementalMediaLive\", \"AWSElementalMediaPackage\", \"AWSElementalMediaStore\", \"AWSElementalMediaTailor\", \"AWSEndUserMessaging3pFees\", \"AWSEnterpriseOnRamp\", \"AWSEntityResolution\", \"AWSEvents\", \"AWSFIS\", \"AWSFMS\", \"AWSGlobalAccelerator\", \"AWSGlueElasticViews\", \"AWSGlue\", \"AWSGreengrass\", \"AWSGroundStation\", \"AWSIAMAccessAnalyzer\", \"AWSIoT1Click\", \"AWSIoTAnalytics\", \"AWSIoTEvents\", \"AWSIoTFleetWise\", \"AWSIoTSiteWise\", \"AWSIoTThingsGraph\", \"AWSIoT\", \"AWSLakeFormation\", \"AWSLambda\", \"AWSM2\", \"AWSMDC\", \"AWSMediaConnect\", \"AWSMigrationHubRefactorSpaces\", \"AWSNetworkFirewall\", \"AWSOutposts\", \"AWSPCS\", \"AWSPrivate5G\", \"AWSQueueService\", \"AWSR53AppRecoveryController\", \"AWSResilienceHub\", \"AWSRoboMaker\", \"AWSSecretsManager\", \"AWSSecurityHub\", \"AWSServiceCatalog\", \"AWSShield\", \"AWSStorageGatewayDeepArchive\", \"AWSStorageGateway\", \"AWSSupplyChain\", \"AWSSupportBusiness\", \"AWSSupportEnterprise\", \"AWSSystemsManager\", \"AWSTelcoNetworkBuilder\", \"AWSTransfer\", \"AWSWickr\", \"AWSWisdom\", \"AWSXRay\", \"AlexaTopSites\", \"AlexaWebInfoService\", \"AmazonA2I\", \"AmazonApiGateway\", \"AmazonAppStream\", \"AmazonAthena\", \"AmazonBedrockService\", \"AmazonBedrock\", \"AmazonBraket\", \"AmazonChimeBusinessCalling\"]}"
          }
        },
        {
          "test_number": 2,
          "description": "Get service attributes",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"get_pricing_service_attributes\", \"service_code\": \"AmazonEC2\", \"attributes\": [\"termType\", \"productFamily\", \"servicecode\", \"location\", \"locationType\", \"instanceType\", \"currentGeneration\", \"instanceFamily\", \"vcpu\", \"physicalProcessor\", \"clockSpeed\", \"memory\", \"storage\", \"networkPerformance\", \"processorArchitecture\", \"tenancy\", \"operatingSystem\", \"licenseModel\", \"usagetype\", \"operation\", \"availabilityzone\", \"capacitystatus\", \"classicnetworkingsupport\", \"dedicatedEbsThroughput\", \"ecu\", \"enhancedNetworkingSupported\", \"gpuMemory\", \"instancesku\", \"intelAvxAvailable\", \"intelAvx2Available\", \"intelTurboAvailable\", \"marketoption\", \"normalizationSizeFactor\", \"preInstalledSw\", \"processorFeatures\", \"regionCode\", \"servicename\", \"vpcnetworkingsupport\", \"LeaseContractLength\", \"PurchaseOption\", \"OfferingClass\", \"physicalCores\", \"instanceCapacity-12xlarge\", \"instanceCapacity-16xlarge\", \"instanceCapacity-24xlarge\", \"instanceCapacity-2xlarge\", \"instanceCapacity-32xlarge\", \"instanceCapacity-4xlarge\", \"instanceCapacity-8xlarge\", \"instanceCapacity-Large\", \"instanceCapacity-Xlarge\", \"instance\", \"group\", \"toLocation\", \"toRegionCode\", \"groupDescription\", \"resourceType\", \"storageMedia\", \"volumeType\", \"maxVolumeSize\", \"maxIopsvolume\", \"maxThroughputvolume\", \"volumeApiName\", \"provisioned\", \"snapshotarchivefeetype\", \"Restriction\", \"maxIopsBurstPerformance\", \"productType\", \"instanceCapacity-18xlarge\", \"instanceCapacity-9xlarge\", \"gpu\", \"instanceCapacity-Metal\", \"elasticGraphicsType\", \"instanceCapacity-Medium\", \"instanceCapacity-10xlarge\", \"ebsOptimized\", \"transferType\", \"fromLocation\", \"fromLocationType\", \"toLocationType\", \"fromRegionCode\"]}"
          }
        }
      ],
      "success_count": 2,
      "total_tests": 2
    },
    {
      "function_name": "mcp-cloudwatch-server",
      "test_cases": [
        {
          "test_number": 1,
          "description": "Describe log groups",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"describe_log_groups\", \"log_groups\": [{\"logGroupName\": \"/aws-glue/crawlers\", \"creationTime\": 1712582405282, \"metricFilterCount\": 0, \"arn\": \"arn:aws:logs:us-east-1:291615555612:log-group:/aws-glue/crawlers:*\", \"storedBytes\": 767, \"logGroupClass\": \"STANDARD\", \"logGroupArn\": \"arn:aws:logs:us-east-1:291615555612:log-group:/aws-glue/crawlers\"}, {\"logGroupName\": \"/aws/application-signals/data\", \"creationTime\": 1755412411776, \"metricFilterCount\": 0, \"arn\": \"arn:aws:logs:us-east-1:291615555612:log-group:/aws/application-signals/data:*\", \"storedBytes\": 133960, \"logGroupClass\": \"STANDARD\", \"logGroupArn\": \"arn:aws:logs:us-east-1:291615555612:log-group:/aws/application-signals/data\"}, {\"logGroupName\": \"/aws/appsync/apis/4ixm26ijdfcn3juhe2gwzp2ofq\", \"creationTime\": 1712583272496, \"metricFilterCount\": 0, \"arn\": \"arn:aws:logs:us-east-1:291615555612:log-group:/aws/appsync/apis/4ixm26ijdfcn3juhe2gwzp2ofq:*\", \"storedBytes\": 78117, \"logGroupClass\": \"STANDARD\", \"logGroupArn\": \"arn:aws:logs:us-east-1:291615555612:log-group:/aws/appsync/apis/4ixm26ijdfcn3juhe2gwzp2ofq\"}, {\"logGroupName\": \"/aws/bedrock-agentcore/runtimes/devops_agent-r4rOICGyLI-DEFAULT\", \"creationTime\": 1755752004798, \"metricFilterCount\": 0, \"arn\": \"arn:aws:logs:us-east-1:291615555612:log-group:/aws/bedrock-agentcore/runtimes/devops_agent-r4rOICGyLI-DEFAULT:*\", \"storedBytes\": 0, \"logGroupClass\": \"STANDARD\", \"logGroupArn\": \"arn:aws:logs:us-east-1:291615555612:log-group:/aws/bedrock-agentcore/runtimes/devops_agent-r4rOICGyLI-DEFAULT\"}, {\"logGroupName\": \"/aws/bedrock-agentcore/runtimes/eks_agent-71J8u0AMPA-DEFAULT\", \"creationTime\": 1755971585139, \"metricFilterCount\": 0, \"arn\": \"arn:aws:logs:us-east-1:291615555612:log-group:/aws/bedrock-agentcore/runtimes/eks_agent-71J8u0AMPA-DEFAULT:*\", \"storedBytes\": 0, \"logGroupClass\": \"STANDARD\", \"logGroupArn\": \"arn:aws:logs:us-east-1:291615555612:log-group:/aws/bedrock-agentcore/runtimes/eks_agent-71J8u0AMPA-DEFAULT\"}], \"region\": \"us-east-1\"}"
          }
        },
        {
          "test_number": 2,
          "description": "Get active alarms",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"get_active_alarms\", \"alarms\": {\"metric_alarms\": [], \"composite_alarms\": [], \"total_alarms\": 0}, \"region\": \"us-east-1\"}"
          }
        }
      ],
      "success_count": 2,
      "total_tests": 2
    },
    {
      "function_name": "mcp-eks-server",
      "test_cases": [
        {
          "test_number": 1,
          "description": "List EKS clusters",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"list_clusters\", \"clusters\": [\"5GC-Telco-Outposts-Cluster\", \"BasicEKSCluster-ZTSTJf2wfvqh\", \"bmn-rack-outposts-cluster\", \"cse-dev-multus-2\", \"eks-cluster-kinara-dev\", \"eks-cluster-kinara-dev2\", \"gitops-management-argocd-crossplane\", \"gv3-ran-outposts-cluster\", \"sigitp-eks-gamma\", \"tibu-cse-operator-cluster-drjmu\", \"vCU-CP-Cluster-Region\", \"vCU-UP-Cluster-Region\"], \"region\": \"us-east-1\"}"
          }
        }
      ],
      "success_count": 1,
      "total_tests": 1
    },
    {
      "function_name": "mcp-terraform-server",
      "test_cases": [
        {
          "test_number": 1,
          "description": "Search AWS provider docs",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"search_aws_provider_docs\", \"results\": {\"found\": true, \"asset_name\": \"aws_s3_bucket\", \"asset_type\": \"resource\", \"documentation\": {\"name\": \"aws_s3_bucket\", \"type\": \"resource\", \"description\": \"Provides a S3 bucket resource.\", \"url\": \"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket\", \"arguments\": [{\"name\": \"bucket\", \"description\": \"The name of the bucket\", \"required\": false}, {\"name\": \"bucket_prefix\", \"description\": \"Creates a unique bucket name beginning with the specified prefix\", \"required\": false}, {\"name\": \"force_destroy\", \"description\": \"A boolean that indicates all objects should be deleted from the bucket\", \"required\": false}], \"attributes\": [{\"name\": \"id\", \"description\": \"The name of the bucket\"}, {\"name\": \"arn\", \"description\": \"The ARN of the bucket\"}, {\"name\": \"bucket_domain_name\", \"description\": \"The bucket domain name\"}]}}}"
          }
        },
        {
          "test_number": 2,
          "description": "Generate Terraform template",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"generate_terraform_template\", \"template\": \"resource \\\"aws_s3_bucket\\\" \\\"example_bucket\\\" {\\n  bucket = \\\"my-example-bucket\\\"\\n  force_destroy = true\\n}\", \"resource_type\": \"aws_s3_bucket\", \"resource_name\": \"example_bucket\"}"
          }
        }
      ],
      "success_count": 2,
      "total_tests": 2
    },
    {
      "function_name": "mcp-git-repo-research-server",
      "test_cases": [
        {
          "test_number": 1,
          "description": "Search GitHub repositories",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"search_repos_on_github\", \"repositories\": [{\"name\": \"aws-serverless-workshops\", \"full_name\": \"aws-samples/aws-serverless-workshops\", \"description\": \"Code and walkthrough labs to set up serverless applications for Wild Rydes workshops\", \"html_url\": \"https://github.com/aws-samples/aws-serverless-workshops\", \"clone_url\": \"https://github.com/aws-samples/aws-serverless-workshops.git\", \"stars\": 4249, \"language\": \"JavaScript\", \"license\": \"Apache License 2.0\", \"updated_at\": \"2025-08-16T20:51:29Z\", \"organization\": \"aws-samples\"}, {\"name\": \"aws-serverless-airline-booking\", \"full_name\": \"aws-samples/aws-serverless-airline-booking\", \"description\": \"Airline Booking is a sample web application that provides Flight Search, Flight Payment, Flight Booking and Loyalty points including end-to-end testing, GraphQL and CI/CD. This web application was the theme of Build on Serverless Season 2 on AWS Twitch running from April 24th until end of August in 2019.\", \"html_url\": \"https://github.com/aws-samples/aws-serverless-airline-booking\", \"clone_url\": \"https://github.com/aws-samples/aws-serverless-airline-booking.git\", \"stars\": 2275, \"language\": null, \"license\": \"MIT No Attribution\", \"updated_at\": \"2025-08-23T06:29:15Z\", \"organization\": \"aws-samples\"}, {\"name\": \"lambda-refarch-webapp\", \"full_name\": \"aws-samples/lambda-refarch-webapp\", \"description\": \"The Web Application reference architecture is a general-purpose, event-driven, web application back-end that uses AWS Lambda, Amazon API Gateway for its business logic. It also uses Amazon DynamoDB as its database and Amazon Cognito for user management. All static content is hosted using AWS Amplify Console.\", \"html_url\": \"https://github.com/aws-samples/lambda-refarch-webapp\", \"clone_url\": \"https://github.com/aws-samples/lambda-refarch-webapp.git\", \"stars\": 1594, \"language\": \"JavaScript\", \"license\": \"Apache License 2.0\", \"updated_at\": \"2025-08-15T08:03:26Z\", \"organization\": \"aws-samples\"}], \"keywords\": [\"aws\", \"lambda\"]}"
          }
        },
        {
          "test_number": 2,
          "description": "Access file (mock)",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"access_file\", \"file_info\": {\"type\": \"file\", \"path\": \"test-repo/repository/README.md\", \"content\": \"# test-repo\\n\\nThis is a simulated README file for test-repo.\\n\\n## Features\\n- Feature 1\\n- Feature 2\\n\\n## Usage\\n```bash\\n# Example usage\\necho 'Hello World'\\n```\", \"size\": 200, \"encoding\": \"text\"}}"
          }
        }
      ],
      "success_count": 2,
      "total_tests": 2
    },
    {
      "function_name": "mcp-frontend-server",
      "test_cases": [
        {
          "test_number": 1,
          "description": "Get React documentation",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"get_react_docs_by_topic\", \"documentation\": {\"success\": true, \"topic\": \"essential-knowledge\", \"title\": \"Essential React Knowledge for AWS Applications\", \"content\": \"\\n# Essential React Knowledge for AWS Applications\\n\\n## Core Concepts\\n\\n### Component Architecture\\n- **Functional Components**: Use hooks for state and lifecycle management\\n- **Component Composition**: Build complex UIs from simple, reusable components\\n- **Props and State**: Understand data flow and state management patterns\\n\\n### State Management\\n- **useState**: For local component state\\n- **useReducer**: For complex state logic\\n- **Context API**: For global state without prop drilling\\n- **External Libraries**: Redux, Zustand, or Jotai for complex applications\\n\\n### AWS Integration Patterns\\n- **API Gateway + Lambda**: RESTful APIs with AWS services\\n- **Amplify**: Full-stack development platform\\n- **Cognito**: Authentication and user management\\n- **S3**: Static hosting and file storage\\n\\n## Best Practices\\n\\n### Performance\\n- Use React.memo() for expensive components\\n- Implement code splitting with React.lazy()\\n- Optimize bundle size with tree shaking\\n- Use React DevTools for performance profiling\\n\\n### Security\\n- Sanitize user inputs to prevent XSS\\n- Use HTTPS for all API communications\\n- Implement proper authentication flows\\n- Store sensitive data securely (not in localStorage)\\n\\n### AWS-Specific Patterns\\n- Use AWS SDK v3 with tree shaking\\n- Implement proper error handling for AWS services\\n- Use AWS Amplify for rapid development\\n- Follow AWS Well-Architected Framework principles\\n                \", \"format\": \"markdown\"}}"
          }
        },
        {
          "test_number": 2,
          "description": "Generate React component",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"generate_react_component\", \"component\": {\"success\": true, \"component_name\": \"TestComponent\", \"component_type\": \"functional\", \"code\": \"\\ninterface TestComponentProps {\\n  title: any;\\n  description: any;\\n}\\n\\nconst TestComponent = ({title, description}: TestComponentProps) => {\\n  return (\\n    <div className=\\\"testcomponent\\\">\\n      <h1>TestComponent</h1>\\n            <p>{props.title}</p>\\n      <p>{props.description}</p>\\n    </div>\\n  );\\n};\\n\\nexport default TestComponent;\", \"props\": [\"title\", \"description\"], \"language\": \"typescript\"}}"
          }
        }
      ],
      "success_count": 2,
      "total_tests": 2
    },
    {
      "function_name": "mcp-aws-location-server",
      "test_cases": [
        {
          "test_number": 1,
          "description": "Reverse geocode coordinates",
          "success": true,
          "status_code": 200,
          "response": {
            "statusCode": 200,
            "body": "{\"success\": true, \"operation\": \"reverse_geocode\", \"results\": {\"success\": false, \"coordinates\": [-122.4194, 37.7749], \"error\": \"An error occurred (AccessDeniedException) when calling the SearchPlaceIndexForPosition operation: User: arn:aws:sts::291615555612:assumed-role/MCPLambdaExecutionRole/mcp-aws-location-server is not authorized to perform: geo:SearchPlaceIndexForPosition on resource: arn:aws:geo:us-east-1:291615555612:place-index/Esri\"}}"
          }
        }
      ],
      "success_count": 1,
      "total_tests": 1
    }
  ]
}